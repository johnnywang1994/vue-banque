import{toRef as t,readonly as o,inject as e}from"vue";const n="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag,r=t=>n?Symbol("[vue-banque]: "+t):"[vue-banque]: "+t,i=r("vue-banque"),s=r("Modifying property directly from Hook Store is not allowed"),c=r("hook-action"),u=r("banque-module");class a{options;rootState;constructor(t){this.options=t,this.rootState={},this.initModules()}initModules(){const{modules:t}=this.options;t&&Object.keys(t).forEach((o=>{const e=t[o];if(e){const t=this.createModule(e);this.bindModule(o,t)}}))}createModule(o){const{rootState:e}=this,n={};return Object.defineProperty(n,u.toString(),{get:()=>!0}),Object.keys(o).forEach((t=>{const r="function"==typeof o[t]?function(t,o){function e(...e){return t.apply(o,[o,...e])}return Object.defineProperty(e,c.toString(),{get:()=>!0}),e}(o[t],e):o[t];n[t]=r})),new Proxy(n,{get(o,e,n){const r=Reflect.get(o,e,n);return"function"==typeof r&&r[c.toString()]?r:t(o,e)},set(){throw Error(s.toString())}})}bindModule(t,e){const{rootState:n}=this;return e[u.toString()]?(Object.defineProperty(n,t,{get:()=>o(e)}),n[t]):e}install(t){Object.defineProperty(t.config.globalProperties,"$banque",{get:()=>this.rootState}),t.provide(i,this.rootState)}inject(){return e(i)}}function f(t){return new a(t)}export{f as createBanque};
//# sourceMappingURL=vue-banque.esm.js.map
